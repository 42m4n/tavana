# Setting YAML indicators , to prevent redundancy.
x-defaults-minio: &default-minio
  image: ${NEXUS_URL}/minio/minio:${MINIO_MINIO_VERSION:-latest}
  environment: 
    MINIO_ROOT_USER: ${MINIO_ROOT_USER}
    MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    TZ: Asia/Tehran
  command: 
    - "server"
    - "--console-address"
    - ":9001"
    - "http://minio-{1...3}:9000/data"
  networks:
    minio:
      aliases:
        - minio
    traefik-net:
    prometheus:
      aliases:
        - miniop
  volumes:
    - minio-data:/data

x-default-deploy: &default-deploy
  replicas: 1
  update_config:
    parallelism: 1
    delay: 30s
    order: stop-first
    failure_action: rollback
  rollback_config:
    parallelism: 1
    delay: 30s
  restart_policy:
    condition: on-failure
    delay: 30s
    max_attempts: 3
    window: 120s

x-default-labels: &default-labels
  labels:
    - "traefik.enable=true"
    - "traefik.docker.network=traefik-net"
    - "traefik.http.routers.minio.entrypoints=http"
    - "traefik.http.routers.minio.rule=Host(`${MINIO_SUB}.${DOMAIN}`)"
    - "traefik.http.routers.minio.middlewares=https-redirect"
    - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
    - "traefik.http.routers.minio-secure.entrypoints=https"
    - "traefik.http.routers.minio-secure.rule=Host(`${MINIO_SUB}.${DOMAIN}`)"
    - "traefik.http.routers.minio-secure.tls=true"
    - "traefik.http.routers.minio-secure.tls.certresolver=mycert"
    - "traefik.http.services.minio.loadbalancer.server.port=9001"

services:
  minio-1:
    <<: *default-minio
    hostname: minio-1
    deploy:
      <<: [*default-deploy, *default-labels]
      placement:
        constraints:
          - node.hostname == ${MINIO_NODE1}

  minio-2:
    <<: *default-minio
    hostname: minio-2
    deploy:
      <<: [*default-deploy, *default-labels]
      placement:
        constraints:
          - node.hostname == ${MINIO_NODE2}

  minio-3:
    <<: *default-minio
    hostname: minio-3
    deploy:
      <<: [*default-deploy, *default-labels]
      placement:
        constraints:
          - node.hostname == ${MINIO_NODE3}

  createbuckets:
    image: ${NEXUS_URL}/minio/mc:${MINIO_MC_VERSION:-latest}
    depends_on:
      - minio-1
      - minio-2 
      - minio-3 
    networks:
      - minio
    volumes:
      - minio-policies:/policies
    deploy:
      replicas: 1
      restart_policy:
        condition: none
    environment: 
      MINIO_ALIAS: "myminio"
      MINIO_URL: http://minio:9000
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_MIMIR_PASSWORD: ${MINIO_MIMIR_PASSWORD}
      MINIO_MIMIR_USER: ${MINIO_MIMIR_USER}
      MINIO_USERS: ${MINIO_USERS}
      BUCKETS: ${BUCKRTS}
    healthcheck:
      test: ["CMD", "/usr/bin/mc", "alias", "ls", "$MINIO_ALIAS"]
      interval: 30s
      timeout: 10s
      retries: 5
    entrypoint: ["/bin/bash", "/policies/init-minio.sh"]

networks:
  minio:
    external: true
  traefik-net:
    external: true
  prometheus:
    external: true

volumes:
  minio-data: {}
  minio-policies:
    external: true